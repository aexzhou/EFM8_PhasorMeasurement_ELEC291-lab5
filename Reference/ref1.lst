0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Sun Mar 03 15:23:14 2024
0000              5   ;--------------------------------------------------------
                  5   $name ref1
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _Get_ADC
0000             30            public _LCDprint2
0000             31            public _LCDprint
0000             32            public _LCD_4BIT
0000             33            public _WriteCommand
0000             34            public _WriteData
0000             35            public _LCD_byte
0000             36            public _LCD_pulse
0000             37            public _Volts_at_Pin
0000             38            public _ADC_at_Pin
0000             39            public _InitPinADC
0000             40            public _TIMER0_Init
0000             41            public _waitms
0000             42            public _Timer3us
0000             43            public _InitADC
0000             44            public __c51_external_startup
0000             45            public _LCDprint_PARM_3
0000             46            public _LCDprint2_PARM_3
0000             47            public _LCDprint2_PARM_2
0000             48            public _LCDprint_PARM_2
0000             49            public _overflow_count
0000             50   ;--------------------------------------------------------
0000             51   ; Special Function Registers
0000             52   ;--------------------------------------------------------
0000             53   _ACC            DATA 0xe0
0000             54   _ADC0ASAH       DATA 0xb6
0000             55   _ADC0ASAL       DATA 0xb5
0000             56   _ADC0ASCF       DATA 0xa1
0000             57   _ADC0ASCT       DATA 0xc7
0000             58   _ADC0CF0        DATA 0xbc
0000             59   _ADC0CF1        DATA 0xb9
0000             60   _ADC0CF2        DATA 0xdf
0000             61   _ADC0CN0        DATA 0xe8
0000             62   _ADC0CN1        DATA 0xb2
0000             63   _ADC0CN2        DATA 0xb3
0000             64   _ADC0GTH        DATA 0xc4
0000             65   _ADC0GTL        DATA 0xc3
0000             66   _ADC0H          DATA 0xbe
0000             67   _ADC0L          DATA 0xbd
0000             68   _ADC0LTH        DATA 0xc6
0000             69   _ADC0LTL        DATA 0xc5
0000             70   _ADC0MX         DATA 0xbb
0000             71   _B              DATA 0xf0
0000             72   _CKCON0         DATA 0x8e
0000             73   _CKCON1         DATA 0xa6
0000             74   _CLEN0          DATA 0xc6
0000             75   _CLIE0          DATA 0xc7
0000             76   _CLIF0          DATA 0xe8
0000             77   _CLKSEL         DATA 0xa9
0000             78   _CLOUT0         DATA 0xd1
0000             79   _CLU0CF         DATA 0xb1
0000             80   _CLU0FN         DATA 0xaf
0000             81   _CLU0MX         DATA 0x84
0000             82   _CLU1CF         DATA 0xb3
0000             83   _CLU1FN         DATA 0xb2
0000             84   _CLU1MX         DATA 0x85
0000             85   _CLU2CF         DATA 0xb6
0000             86   _CLU2FN         DATA 0xb5
0000             87   _CLU2MX         DATA 0x91
0000             88   _CLU3CF         DATA 0xbf
0000             89   _CLU3FN         DATA 0xbe
0000             90   _CLU3MX         DATA 0xae
0000             91   _CMP0CN0        DATA 0x9b
0000             92   _CMP0CN1        DATA 0x99
0000             93   _CMP0MD         DATA 0x9d
0000             94   _CMP0MX         DATA 0x9f
0000             95   _CMP1CN0        DATA 0xbf
0000             96   _CMP1CN1        DATA 0xac
0000             97   _CMP1MD         DATA 0xab
0000             98   _CMP1MX         DATA 0xaa
0000             99   _CRC0CN0        DATA 0xce
0000            100   _CRC0CN1        DATA 0x86
0000            101   _CRC0CNT        DATA 0xd3
0000            102   _CRC0DAT        DATA 0xcb
0000            103   _CRC0FLIP       DATA 0xcf
0000            104   _CRC0IN         DATA 0xca
0000            105   _CRC0ST         DATA 0xd2
0000            106   _DAC0CF0        DATA 0x91
0000            107   _DAC0CF1        DATA 0x92
0000            108   _DAC0H          DATA 0x85
0000            109   _DAC0L          DATA 0x84
0000            110   _DAC1CF0        DATA 0x93
0000            111   _DAC1CF1        DATA 0x94
0000            112   _DAC1H          DATA 0x8a
0000            113   _DAC1L          DATA 0x89
0000            114   _DAC2CF0        DATA 0x95
0000            115   _DAC2CF1        DATA 0x96
0000            116   _DAC2H          DATA 0x8c
0000            117   _DAC2L          DATA 0x8b
0000            118   _DAC3CF0        DATA 0x9a
0000            119   _DAC3CF1        DATA 0x9c
0000            120   _DAC3H          DATA 0x8e
0000            121   _DAC3L          DATA 0x8d
0000            122   _DACGCF0        DATA 0x88
0000            123   _DACGCF1        DATA 0x98
0000            124   _DACGCF2        DATA 0xa2
0000            125   _DERIVID        DATA 0xad
0000            126   _DEVICEID       DATA 0xb5
0000            127   _DPH            DATA 0x83
0000            128   _DPL            DATA 0x82
0000            129   _EIE1           DATA 0xe6
0000            130   _EIE2           DATA 0xf3
0000            131   _EIP1           DATA 0xbb
0000            132   _EIP1H          DATA 0xee
0000            133   _EIP2           DATA 0xed
0000            134   _EIP2H          DATA 0xf6
0000            135   _EMI0CN         DATA 0xe7
0000            136   _FLKEY          DATA 0xb7
0000            137   _HFO0CAL        DATA 0xc7
0000            138   _HFO1CAL        DATA 0xd6
0000            139   _HFOCN          DATA 0xef
0000            140   _I2C0ADM        DATA 0xff
0000            141   _I2C0CN0        DATA 0xba
0000            142   _I2C0DIN        DATA 0xbc
0000            143   _I2C0DOUT       DATA 0xbb
0000            144   _I2C0FCN0       DATA 0xad
0000            145   _I2C0FCN1       DATA 0xab
0000            146   _I2C0FCT        DATA 0xf5
0000            147   _I2C0SLAD       DATA 0xbd
0000            148   _I2C0STAT       DATA 0xb9
0000            149   _IE             DATA 0xa8
0000            150   _IP             DATA 0xb8
0000            151   _IPH            DATA 0xf2
0000            152   _IT01CF         DATA 0xe4
0000            153   _LFO0CN         DATA 0xb1
0000            154   _P0             DATA 0x80
0000            155   _P0MASK         DATA 0xfe
0000            156   _P0MAT          DATA 0xfd
0000            157   _P0MDIN         DATA 0xf1
0000            158   _P0MDOUT        DATA 0xa4
0000            159   _P0SKIP         DATA 0xd4
0000            160   _P1             DATA 0x90
0000            161   _P1MASK         DATA 0xee
0000            162   _P1MAT          DATA 0xed
0000            163   _P1MDIN         DATA 0xf2
0000            164   _P1MDOUT        DATA 0xa5
0000            165   _P1SKIP         DATA 0xd5
0000            166   _P2             DATA 0xa0
0000            167   _P2MASK         DATA 0xfc
0000            168   _P2MAT          DATA 0xfb
0000            169   _P2MDIN         DATA 0xf3
0000            170   _P2MDOUT        DATA 0xa6
0000            171   _P2SKIP         DATA 0xcc
0000            172   _P3             DATA 0xb0
0000            173   _P3MDIN         DATA 0xf4
0000            174   _P3MDOUT        DATA 0x9c
0000            175   _PCA0CENT       DATA 0x9e
0000            176   _PCA0CLR        DATA 0x9c
0000            177   _PCA0CN0        DATA 0xd8
0000            178   _PCA0CPH0       DATA 0xfc
0000            179   _PCA0CPH1       DATA 0xea
0000            180   _PCA0CPH2       DATA 0xec
0000            181   _PCA0CPH3       DATA 0xf5
0000            182   _PCA0CPH4       DATA 0x85
0000            183   _PCA0CPH5       DATA 0xde
0000            184   _PCA0CPL0       DATA 0xfb
0000            185   _PCA0CPL1       DATA 0xe9
0000            186   _PCA0CPL2       DATA 0xeb
0000            187   _PCA0CPL3       DATA 0xf4
0000            188   _PCA0CPL4       DATA 0x84
0000            189   _PCA0CPL5       DATA 0xdd
0000            190   _PCA0CPM0       DATA 0xda
0000            191   _PCA0CPM1       DATA 0xdb
0000            192   _PCA0CPM2       DATA 0xdc
0000            193   _PCA0CPM3       DATA 0xae
0000            194   _PCA0CPM4       DATA 0xaf
0000            195   _PCA0CPM5       DATA 0xcc
0000            196   _PCA0H          DATA 0xfa
0000            197   _PCA0L          DATA 0xf9
0000            198   _PCA0MD         DATA 0xd9
0000            199   _PCA0POL        DATA 0x96
0000            200   _PCA0PWM        DATA 0xf7
0000            201   _PCON0          DATA 0x87
0000            202   _PCON1          DATA 0xcd
0000            203   _PFE0CN         DATA 0xc1
0000            204   _PRTDRV         DATA 0xf6
0000            205   _PSCTL          DATA 0x8f
0000            206   _PSTAT0         DATA 0xaa
0000            207   _PSW            DATA 0xd0
0000            208   _REF0CN         DATA 0xd1
0000            209   _REG0CN         DATA 0xc9
0000            210   _REVID          DATA 0xb6
0000            211   _RSTSRC         DATA 0xef
0000            212   _SBCON1         DATA 0x94
0000            213   _SBRLH1         DATA 0x96
0000            214   _SBRLL1         DATA 0x95
0000            215   _SBUF           DATA 0x99
0000            216   _SBUF0          DATA 0x99
0000            217   _SBUF1          DATA 0x92
0000            218   _SCON           DATA 0x98
0000            219   _SCON0          DATA 0x98
0000            220   _SCON1          DATA 0xc8
0000            221   _SFRPAGE        DATA 0xa7
0000            222   _SFRPGCN        DATA 0xbc
0000            223   _SFRSTACK       DATA 0xd7
0000            224   _SMB0ADM        DATA 0xd6
0000            225   _SMB0ADR        DATA 0xd7
0000            226   _SMB0CF         DATA 0xc1
0000            227   _SMB0CN0        DATA 0xc0
0000            228   _SMB0DAT        DATA 0xc2
0000            229   _SMB0FCN0       DATA 0xc3
0000            230   _SMB0FCN1       DATA 0xc4
0000            231   _SMB0FCT        DATA 0xef
0000            232   _SMB0RXLN       DATA 0xc5
0000            233   _SMB0TC         DATA 0xac
0000            234   _SMOD1          DATA 0x93
0000            235   _SP             DATA 0x81
0000            236   _SPI0CFG        DATA 0xa1
0000            237   _SPI0CKR        DATA 0xa2
0000            238   _SPI0CN0        DATA 0xf8
0000            239   _SPI0DAT        DATA 0xa3
0000            240   _SPI0FCN0       DATA 0x9a
0000            241   _SPI0FCN1       DATA 0x9b
0000            242   _SPI0FCT        DATA 0xf7
0000            243   _SPI0PCF        DATA 0xdf
0000            244   _TCON           DATA 0x88
0000            245   _TH0            DATA 0x8c
0000            246   _TH1            DATA 0x8d
0000            247   _TL0            DATA 0x8a
0000            248   _TL1            DATA 0x8b
0000            249   _TMOD           DATA 0x89
0000            250   _TMR2CN0        DATA 0xc8
0000            251   _TMR2CN1        DATA 0xfd
0000            252   _TMR2H          DATA 0xcf
0000            253   _TMR2L          DATA 0xce
0000            254   _TMR2RLH        DATA 0xcb
0000            255   _TMR2RLL        DATA 0xca
0000            256   _TMR3CN0        DATA 0x91
0000            257   _TMR3CN1        DATA 0xfe
0000            258   _TMR3H          DATA 0x95
0000            259   _TMR3L          DATA 0x94
0000            260   _TMR3RLH        DATA 0x93
0000            261   _TMR3RLL        DATA 0x92
0000            262   _TMR4CN0        DATA 0x98
0000            263   _TMR4CN1        DATA 0xff
0000            264   _TMR4H          DATA 0xa5
0000            265   _TMR4L          DATA 0xa4
0000            266   _TMR4RLH        DATA 0xa3
0000            267   _TMR4RLL        DATA 0xa2
0000            268   _TMR5CN0        DATA 0xc0
0000            269   _TMR5CN1        DATA 0xf1
0000            270   _TMR5H          DATA 0xd5
0000            271   _TMR5L          DATA 0xd4
0000            272   _TMR5RLH        DATA 0xd3
0000            273   _TMR5RLL        DATA 0xd2
0000            274   _UART0PCF       DATA 0xd9
0000            275   _UART1FCN0      DATA 0x9d
0000            276   _UART1FCN1      DATA 0xd8
0000            277   _UART1FCT       DATA 0xfa
0000            278   _UART1LIN       DATA 0x9e
0000            279   _UART1PCF       DATA 0xda
0000            280   _VDM0CN         DATA 0xff
0000            281   _WDTCN          DATA 0x97
0000            282   _XBR0           DATA 0xe1
0000            283   _XBR1           DATA 0xe2
0000            284   _XBR2           DATA 0xe3
0000            285   _XOSC0CN        DATA 0x86
0000            286   _DPTR           DATA 0x8382
0000            287   _TMR2RL         DATA 0xcbca
0000            288   _TMR3RL         DATA 0x9392
0000            289   _TMR4RL         DATA 0xa3a2
0000            290   _TMR5RL         DATA 0xd3d2
0000            291   _TMR0           DATA 0x8c8a
0000            292   _TMR1           DATA 0x8d8b
0000            293   _TMR2           DATA 0xcfce
0000            294   _TMR3           DATA 0x9594
0000            295   _TMR4           DATA 0xa5a4
0000            296   _TMR5           DATA 0xd5d4
0000            297   _SBRL1          DATA 0x9695
0000            298   _PCA0           DATA 0xfaf9
0000            299   _PCA0CP0        DATA 0xfcfb
0000            300   _PCA0CP1        DATA 0xeae9
0000            301   _PCA0CP2        DATA 0xeceb
0000            302   _PCA0CP3        DATA 0xf5f4
0000            303   _PCA0CP4        DATA 0x8584
0000            304   _PCA0CP5        DATA 0xdedd
0000            305   _ADC0ASA        DATA 0xb6b5
0000            306   _ADC0GT         DATA 0xc4c3
0000            307   _ADC0           DATA 0xbebd
0000            308   _ADC0LT         DATA 0xc6c5
0000            309   _DAC0           DATA 0x8584
0000            310   _DAC1           DATA 0x8a89
0000            311   _DAC2           DATA 0x8c8b
0000            312   _DAC3           DATA 0x8e8d
0000            313   ;--------------------------------------------------------
0000            314   ; special function bits
0000            315   ;--------------------------------------------------------
0000            316   _ACC_0          BIT 0xe0
0000            317   _ACC_1          BIT 0xe1
0000            318   _ACC_2          BIT 0xe2
0000            319   _ACC_3          BIT 0xe3
0000            320   _ACC_4          BIT 0xe4
0000            321   _ACC_5          BIT 0xe5
0000            322   _ACC_6          BIT 0xe6
0000            323   _ACC_7          BIT 0xe7
0000            324   _TEMPE          BIT 0xe8
0000            325   _ADGN0          BIT 0xe9
0000            326   _ADGN1          BIT 0xea
0000            327   _ADWINT         BIT 0xeb
0000            328   _ADBUSY         BIT 0xec
0000            329   _ADINT          BIT 0xed
0000            330   _IPOEN          BIT 0xee
0000            331   _ADEN           BIT 0xef
0000            332   _B_0            BIT 0xf0
0000            333   _B_1            BIT 0xf1
0000            334   _B_2            BIT 0xf2
0000            335   _B_3            BIT 0xf3
0000            336   _B_4            BIT 0xf4
0000            337   _B_5            BIT 0xf5
0000            338   _B_6            BIT 0xf6
0000            339   _B_7            BIT 0xf7
0000            340   _C0FIF          BIT 0xe8
0000            341   _C0RIF          BIT 0xe9
0000            342   _C1FIF          BIT 0xea
0000            343   _C1RIF          BIT 0xeb
0000            344   _C2FIF          BIT 0xec
0000            345   _C2RIF          BIT 0xed
0000            346   _C3FIF          BIT 0xee
0000            347   _C3RIF          BIT 0xef
0000            348   _D1SRC0         BIT 0x88
0000            349   _D1SRC1         BIT 0x89
0000            350   _D1AMEN         BIT 0x8a
0000            351   _D01REFSL       BIT 0x8b
0000            352   _D3SRC0         BIT 0x8c
0000            353   _D3SRC1         BIT 0x8d
0000            354   _D3AMEN         BIT 0x8e
0000            355   _D23REFSL       BIT 0x8f
0000            356   _D0UDIS         BIT 0x98
0000            357   _D1UDIS         BIT 0x99
0000            358   _D2UDIS         BIT 0x9a
0000            359   _D3UDIS         BIT 0x9b
0000            360   _EX0            BIT 0xa8
0000            361   _ET0            BIT 0xa9
0000            362   _EX1            BIT 0xaa
0000            363   _ET1            BIT 0xab
0000            364   _ES0            BIT 0xac
0000            365   _ET2            BIT 0xad
0000            366   _ESPI0          BIT 0xae
0000            367   _EA             BIT 0xaf
0000            368   _PX0            BIT 0xb8
0000            369   _PT0            BIT 0xb9
0000            370   _PX1            BIT 0xba
0000            371   _PT1            BIT 0xbb
0000            372   _PS0            BIT 0xbc
0000            373   _PT2            BIT 0xbd
0000            374   _PSPI0          BIT 0xbe
0000            375   _P0_0           BIT 0x80
0000            376   _P0_1           BIT 0x81
0000            377   _P0_2           BIT 0x82
0000            378   _P0_3           BIT 0x83
0000            379   _P0_4           BIT 0x84
0000            380   _P0_5           BIT 0x85
0000            381   _P0_6           BIT 0x86
0000            382   _P0_7           BIT 0x87
0000            383   _P1_0           BIT 0x90
0000            384   _P1_1           BIT 0x91
0000            385   _P1_2           BIT 0x92
0000            386   _P1_3           BIT 0x93
0000            387   _P1_4           BIT 0x94
0000            388   _P1_5           BIT 0x95
0000            389   _P1_6           BIT 0x96
0000            390   _P1_7           BIT 0x97
0000            391   _P2_0           BIT 0xa0
0000            392   _P2_1           BIT 0xa1
0000            393   _P2_2           BIT 0xa2
0000            394   _P2_3           BIT 0xa3
0000            395   _P2_4           BIT 0xa4
0000            396   _P2_5           BIT 0xa5
0000            397   _P2_6           BIT 0xa6
0000            398   _P3_0           BIT 0xb0
0000            399   _P3_1           BIT 0xb1
0000            400   _P3_2           BIT 0xb2
0000            401   _P3_3           BIT 0xb3
0000            402   _P3_4           BIT 0xb4
0000            403   _P3_7           BIT 0xb7
0000            404   _CCF0           BIT 0xd8
0000            405   _CCF1           BIT 0xd9
0000            406   _CCF2           BIT 0xda
0000            407   _CCF3           BIT 0xdb
0000            408   _CCF4           BIT 0xdc
0000            409   _CCF5           BIT 0xdd
0000            410   _CR             BIT 0xde
0000            411   _CF             BIT 0xdf
0000            412   _PARITY         BIT 0xd0
0000            413   _F1             BIT 0xd1
0000            414   _OV             BIT 0xd2
0000            415   _RS0            BIT 0xd3
0000            416   _RS1            BIT 0xd4
0000            417   _F0             BIT 0xd5
0000            418   _AC             BIT 0xd6
0000            419   _CY             BIT 0xd7
0000            420   _RI             BIT 0x98
0000            421   _TI             BIT 0x99
0000            422   _RB8            BIT 0x9a
0000            423   _TB8            BIT 0x9b
0000            424   _REN            BIT 0x9c
0000            425   _CE             BIT 0x9d
0000            426   _SMODE          BIT 0x9e
0000            427   _RI1            BIT 0xc8
0000            428   _TI1            BIT 0xc9
0000            429   _RBX1           BIT 0xca
0000            430   _TBX1           BIT 0xcb
0000            431   _REN1           BIT 0xcc
0000            432   _PERR1          BIT 0xcd
0000            433   _OVR1           BIT 0xce
0000            434   _SI             BIT 0xc0
0000            435   _ACK            BIT 0xc1
0000            436   _ARBLOST        BIT 0xc2
0000            437   _ACKRQ          BIT 0xc3
0000            438   _STO            BIT 0xc4
0000            439   _STA            BIT 0xc5
0000            440   _TXMODE         BIT 0xc6
0000            441   _MASTER         BIT 0xc7
0000            442   _SPIEN          BIT 0xf8
0000            443   _TXNF           BIT 0xf9
0000            444   _NSSMD0         BIT 0xfa
0000            445   _NSSMD1         BIT 0xfb
0000            446   _RXOVRN         BIT 0xfc
0000            447   _MODF           BIT 0xfd
0000            448   _WCOL           BIT 0xfe
0000            449   _SPIF           BIT 0xff
0000            450   _IT0            BIT 0x88
0000            451   _IE0            BIT 0x89
0000            452   _IT1            BIT 0x8a
0000            453   _IE1            BIT 0x8b
0000            454   _TR0            BIT 0x8c
0000            455   _TF0            BIT 0x8d
0000            456   _TR1            BIT 0x8e
0000            457   _TF1            BIT 0x8f
0000            458   _T2XCLK0        BIT 0xc8
0000            459   _T2XCLK1        BIT 0xc9
0000            460   _TR2            BIT 0xca
0000            461   _T2SPLIT        BIT 0xcb
0000            462   _TF2CEN         BIT 0xcc
0000            463   _TF2LEN         BIT 0xcd
0000            464   _TF2L           BIT 0xce
0000            465   _TF2H           BIT 0xcf
0000            466   _T4XCLK0        BIT 0x98
0000            467   _T4XCLK1        BIT 0x99
0000            468   _TR4            BIT 0x9a
0000            469   _T4SPLIT        BIT 0x9b
0000            470   _TF4CEN         BIT 0x9c
0000            471   _TF4LEN         BIT 0x9d
0000            472   _TF4L           BIT 0x9e
0000            473   _TF4H           BIT 0x9f
0000            474   _T5XCLK0        BIT 0xc0
0000            475   _T5XCLK1        BIT 0xc1
0000            476   _TR5            BIT 0xc2
0000            477   _T5SPLIT        BIT 0xc3
0000            478   _TF5CEN         BIT 0xc4
0000            479   _TF5LEN         BIT 0xc5
0000            480   _TF5L           BIT 0xc6
0000            481   _TF5H           BIT 0xc7
0000            482   _RIE            BIT 0xd8
0000            483   _RXTO0          BIT 0xd9
0000            484   _RXTO1          BIT 0xda
0000            485   _RFRQ           BIT 0xdb
0000            486   _TIE            BIT 0xdc
0000            487   _TXHOLD         BIT 0xdd
0000            488   _TXNF1          BIT 0xde
0000            489   _TFRQ           BIT 0xdf
0000            490   ;--------------------------------------------------------
0000            491   ; overlayable register banks
0000            492   ;--------------------------------------------------------
0000            493            rbank0 segment data overlay
0000            494   ;--------------------------------------------------------
0000            495   ; internal ram data
0000            496   ;--------------------------------------------------------
0000            497            rseg R_DSEG
0000            498   _overflow_count:
0000            499            ds 1
0001            500   _LCDprint_PARM_2:
0001            501            ds 1
0002            502   _LCDprint2_PARM_2:
0002            503            ds 1
0003            504   _LCDprint2_PARM_3:
0003            505            ds 1
0004            506   _main_v_1_77:
0004            507            ds 16
0014            508   _main_buffer_1_77:
0014            509            ds 20
0028            510   _main_half_period_1_77:
0028            511            ds 4
002C            512   _main_sloc0_1_0:
002C            513            ds 4
0030            514   ;--------------------------------------------------------
0030            515   ; overlayable items in internal ram 
0030            516   ;--------------------------------------------------------
0000            517            rseg    R_OSEG
0000            518            rseg    R_OSEG
0000            519   _InitPinADC_PARM_2:
0000            520            ds 1
0001            521            rseg    R_OSEG
0001            522   ;--------------------------------------------------------
0001            523   ; indirectly addressable internal ram data
0001            524   ;--------------------------------------------------------
0000            525            rseg R_ISEG
0000            526   ;--------------------------------------------------------
0000            527   ; absolute internal ram data
0000            528   ;--------------------------------------------------------
0000            529            DSEG
0000            530   ;--------------------------------------------------------
0000            531   ; bit data
0000            532   ;--------------------------------------------------------
0000            533            rseg R_BSEG
0000            534   _LCDprint_PARM_3:
0000            535            DBIT    1
0001            536   ;--------------------------------------------------------
0001            537   ; paged external ram data
0001            538   ;--------------------------------------------------------
0000            539            rseg R_PSEG
0000            540   ;--------------------------------------------------------
0000            541   ; external ram data
0000            542   ;--------------------------------------------------------
0000            543            rseg R_XSEG
0000            544   ;--------------------------------------------------------
0000            545   ; absolute external ram data
0000            546   ;--------------------------------------------------------
0000            547            XSEG
0000            548   ;--------------------------------------------------------
0000            549   ; external initialized ram data
0000            550   ;--------------------------------------------------------
0000            551            rseg R_IXSEG
0000            552            rseg R_HOME
0000            553            rseg R_GSINIT
0000            554            rseg R_CSEG
0000            555   ;--------------------------------------------------------
0000            556   ; Reset entry point and interrupt vectors
0000            557   ;--------------------------------------------------------
0000            558            CSEG at 0x0000
0000 020000     559            ljmp    _crt0
0003            560   ;--------------------------------------------------------
0003            561   ; global & static initialisations
0003            562   ;--------------------------------------------------------
0000            563            rseg R_HOME
0000            564            rseg R_GSINIT
0000            565            rseg R_GSINIT
0000            566   ;--------------------------------------------------------
0000            567   ; data variables initialization
0000            568   ;--------------------------------------------------------
0000            569            rseg R_DINIT
0000            570            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            571   ;--------------------------------------------------------
0000            572   ; code
0000            573   ;--------------------------------------------------------
0000            574            rseg R_CSEG
0000            575   ;------------------------------------------------------------
0000            576   ;Allocation info for local variables in function '_c51_external_startup'
0000            577   ;------------------------------------------------------------
0000            578   ;------------------------------------------------------------
0000            579   ;        C:\ELEC291\Lab5\Reference\ref1.c:32: char _c51_external_startup (void)
0000            580   ;        -----------------------------------------
0000            581   ;         function _c51_external_startup
0000            582   ;        -----------------------------------------
0000            583   __c51_external_startup:
0000            584            using   0
0000            585   ;        C:\ELEC291\Lab5\Reference\ref1.c:35: SFRPAGE = 0x00;
0000 75A700     586            mov     _SFRPAGE,#0x00
0003            587   ;        C:\ELEC291\Lab5\Reference\ref1.c:36: WDTCN = 0xDE; //First key
0003 7597DE     588            mov     _WDTCN,#0xDE
0006            589   ;        C:\ELEC291\Lab5\Reference\ref1.c:37: WDTCN = 0xAD; //Second key
0006 7597AD     590            mov     _WDTCN,#0xAD
0009            591   ;        C:\ELEC291\Lab5\Reference\ref1.c:39: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     592            mov     _VDM0CN,#0x80
000C            593   ;        C:\ELEC291\Lab5\Reference\ref1.c:40: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     594            mov     _RSTSRC,#0x06
000F            595   ;        C:\ELEC291\Lab5\Reference\ref1.c:47: SFRPAGE = 0x10;
000F 75A710     596            mov     _SFRPAGE,#0x10
0012            597   ;        C:\ELEC291\Lab5\Reference\ref1.c:48: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     598            mov     _PFE0CN,#0x20
0015            599   ;        C:\ELEC291\Lab5\Reference\ref1.c:49: SFRPAGE = 0x00;
0015 75A700     600            mov     _SFRPAGE,#0x00
0018            601   ;        C:\ELEC291\Lab5\Reference\ref1.c:70: CLKSEL = 0x00;
0018 75A900     602            mov     _CLKSEL,#0x00
001B            603   ;        C:\ELEC291\Lab5\Reference\ref1.c:71: CLKSEL = 0x00;
001B 75A900     604            mov     _CLKSEL,#0x00
001E            605   ;        C:\ELEC291\Lab5\Reference\ref1.c:72: while ((CLKSEL & 0x80) == 0);
001E            606   L002001?:
001E E5A9       607            mov     a,_CLKSEL
0020 30E708     608            jnb     acc.7,L002001?
0023            609   ;        C:\ELEC291\Lab5\Reference\ref1.c:73: CLKSEL = 0x03;
0023 75A903     610            mov     _CLKSEL,#0x03
0026            611   ;        C:\ELEC291\Lab5\Reference\ref1.c:74: CLKSEL = 0x03;
0026 75A903     612            mov     _CLKSEL,#0x03
0029            613   ;        C:\ELEC291\Lab5\Reference\ref1.c:75: while ((CLKSEL & 0x80) == 0);
0029            614   L002004?:
0029 E5A9       615            mov     a,_CLKSEL
002B 30E788     616            jnb     acc.7,L002004?
002E            617   ;        C:\ELEC291\Lab5\Reference\ref1.c:80: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     618            orl     _P0MDOUT,#0x10
0031            619   ;        C:\ELEC291\Lab5\Reference\ref1.c:81: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0031 75E101     620            mov     _XBR0,#0x01
0034            621   ;        C:\ELEC291\Lab5\Reference\ref1.c:82: XBR1     = 0X00;
0034 75E200     622            mov     _XBR1,#0x00
0037            623   ;        C:\ELEC291\Lab5\Reference\ref1.c:83: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     624            mov     _XBR2,#0x40
003A            625   ;        C:\ELEC291\Lab5\Reference\ref1.c:89: SCON0 = 0x10;
003A 759810     626            mov     _SCON0,#0x10
003D            627   ;        C:\ELEC291\Lab5\Reference\ref1.c:90: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
003D 758DE6     628            mov     _TH1,#0xE6
0040            629   ;        C:\ELEC291\Lab5\Reference\ref1.c:91: TL1 = TH1;      // Init Timer1
0040 858D8B     630            mov     _TL1,_TH1
0043            631   ;        C:\ELEC291\Lab5\Reference\ref1.c:92: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0043 53890F     632            anl     _TMOD,#0x0F
0046            633   ;        C:\ELEC291\Lab5\Reference\ref1.c:93: TMOD |=  0x20;                       
0046 438920     634            orl     _TMOD,#0x20
0049            635   ;        C:\ELEC291\Lab5\Reference\ref1.c:94: TR1 = 1; // START Timer1
0049 D28E       636            setb    _TR1
004B            637   ;        C:\ELEC291\Lab5\Reference\ref1.c:95: TI = 1;  // Indicate TX0 ready
004B D299       638            setb    _TI
004D            639   ;        C:\ELEC291\Lab5\Reference\ref1.c:97: return 0;
004D 758200     640            mov     dpl,#0x00
0050 22         641            ret
0051            642   ;------------------------------------------------------------
0051            643   ;Allocation info for local variables in function 'InitADC'
0051            644   ;------------------------------------------------------------
0051            645   ;------------------------------------------------------------
0051            646   ;        C:\ELEC291\Lab5\Reference\ref1.c:100: void InitADC (void)
0051            647   ;        -----------------------------------------
0051            648   ;         function InitADC
0051            649   ;        -----------------------------------------
0051            650   _InitADC:
0051            651   ;        C:\ELEC291\Lab5\Reference\ref1.c:102: SFRPAGE = 0x00;
0051 75A700     652            mov     _SFRPAGE,#0x00
0054            653   ;        C:\ELEC291\Lab5\Reference\ref1.c:103: ADEN=0; // Disable ADC
0054 C2EF       654            clr     _ADEN
0056            655   ;        C:\ELEC291\Lab5\Reference\ref1.c:108: (0x0 << 0) ; // Accumulate n conversions: 0x0: 1, 0x1:4, 0x2:8, 0x3:16, 0x4:32
0056 75B280     656            mov     _ADC0CN1,#0x80
0059            657   ;        C:\ELEC291\Lab5\Reference\ref1.c:112: (0x0 << 2); // 0:SYSCLK ADCCLK = SYSCLK. 1:HFOSC0 ADCCLK = HFOSC0.
0059 75BC20     658            mov     _ADC0CF0,#0x20
005C            659   ;        C:\ELEC291\Lab5\Reference\ref1.c:116: (0x1E << 0); // Conversion Tracking Time. Tadtk = ADTK / (Fsarclk)
005C 75B91E     660            mov     _ADC0CF1,#0x1E
005F            661   ;        C:\ELEC291\Lab5\Reference\ref1.c:125: (0x0 << 0) ; // TEMPE. 0: Disable the Temperature Sensor. 1: Enable the Temperature Sensor.
005F 75E800     662            mov     _ADC0CN0,#0x00
0062            663   ;        C:\ELEC291\Lab5\Reference\ref1.c:130: (0x1F << 0); // ADPWR. Power Up Delay Time. Tpwrtime = ((4 * (ADPWR + 1)) + 2) / (Fadcclk)
0062 75DF3F     664            mov     _ADC0CF2,#0x3F
0065            665   ;        C:\ELEC291\Lab5\Reference\ref1.c:134: (0x0 << 0) ; // ADCM. 0x0: ADBUSY, 0x1: TIMER0, 0x2: TIMER2, 0x3: TIMER3, 0x4: CNVSTR, 0x5: CEX5, 0x6: TIMER4, 0x7: TIMER5, 0x8: CLU0, 0x9: CLU1, 0xA: CLU2, 0xB: CLU3
0065 75B300     666            mov     _ADC0CN2,#0x00
0068            667   ;        C:\ELEC291\Lab5\Reference\ref1.c:136: ADEN=1; // Enable ADC
0068 D2EF       668            setb    _ADEN
006A 22         669            ret
006B            670   ;------------------------------------------------------------
006B            671   ;Allocation info for local variables in function 'Timer3us'
006B            672   ;------------------------------------------------------------
006B            673   ;us                        Allocated to registers r2 
006B            674   ;i                         Allocated to registers r3 
006B            675   ;------------------------------------------------------------
006B            676   ;        C:\ELEC291\Lab5\Reference\ref1.c:140: void Timer3us(unsigned char us)
006B            677   ;        -----------------------------------------
006B            678   ;         function Timer3us
006B            679   ;        -----------------------------------------
006B            680   _Timer3us:
006B AA82       681            mov     r2,dpl
006D            682   ;        C:\ELEC291\Lab5\Reference\ref1.c:145: CKCON0|=0b_0100_0000;
006D 438E40     683            orl     _CKCON0,#0x40
0070            684   ;        C:\ELEC291\Lab5\Reference\ref1.c:147: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0070 7592B8     685            mov     _TMR3RL,#0xB8
0073 7593FF     686            mov     (_TMR3RL >> 8),#0xFF
0076            687   ;        C:\ELEC291\Lab5\Reference\ref1.c:148: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0076 859294     688            mov     _TMR3,_TMR3RL
0079 859395     689            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
007C            690   ;        C:\ELEC291\Lab5\Reference\ref1.c:150: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
007C 759104     691            mov     _TMR3CN0,#0x04
007F            692   ;        C:\ELEC291\Lab5\Reference\ref1.c:151: for (i = 0; i < us; i++)       // Count <us> overflows
007F 7B00       693            mov     r3,#0x00
0081            694   L004004?:
0081 C3         695            clr     c
0082 EB         696            mov     a,r3
0083 9A         697            subb    a,r2
0084 5000       698            jnc     L004007?
0086            699   ;        C:\ELEC291\Lab5\Reference\ref1.c:153: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0086            700   L004001?:
0086 E591       701            mov     a,_TMR3CN0
0088 30E788     702            jnb     acc.7,L004001?
008B            703   ;        C:\ELEC291\Lab5\Reference\ref1.c:154: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
008B 53917F     704            anl     _TMR3CN0,#0x7F
008E            705   ;        C:\ELEC291\Lab5\Reference\ref1.c:151: for (i = 0; i < us; i++)       // Count <us> overflows
008E 0B         706            inc     r3
008F 8000       707            sjmp    L004004?
0091            708   L004007?:
0091            709   ;        C:\ELEC291\Lab5\Reference\ref1.c:156: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0091 759100     710            mov     _TMR3CN0,#0x00
0094 22         711            ret
0095            712   ;------------------------------------------------------------
0095            713   ;Allocation info for local variables in function 'waitms'
0095            714   ;------------------------------------------------------------
0095            715   ;ms                        Allocated to registers r2 r3 
0095            716   ;j                         Allocated to registers r4 r5 
0095            717   ;k                         Allocated to registers r6 
0095            718   ;------------------------------------------------------------
0095            719   ;        C:\ELEC291\Lab5\Reference\ref1.c:159: void waitms (unsigned int ms)
0095            720   ;        -----------------------------------------
0095            721   ;         function waitms
0095            722   ;        -----------------------------------------
0095            723   _waitms:
0095 AA82       724            mov     r2,dpl
0097 AB83       725            mov     r3,dph
0099            726   ;        C:\ELEC291\Lab5\Reference\ref1.c:163: for(j=0; j<ms; j++)
0099 7C00       727            mov     r4,#0x00
009B 7D00       728            mov     r5,#0x00
009D            729   L005005?:
009D C3         730            clr     c
009E EC         731            mov     a,r4
009F 9A         732            subb    a,r2
00A0 ED         733            mov     a,r5
00A1 9B         734            subb    a,r3
00A2 5000       735            jnc     L005009?
00A4            736   ;        C:\ELEC291\Lab5\Reference\ref1.c:164: for (k=0; k<4; k++) Timer3us(250);
00A4 7E00       737            mov     r6,#0x00
00A6            738   L005001?:
00A6 BE04C8     739            cjne    r6,#0x04,L005018?
00A9            740   L005018?:
00A9 5000       741            jnc     L005007?
00AB 7582FA     742            mov     dpl,#0xFA
00AE C002       743            push    ar2
00B0 C003       744            push    ar3
00B2 C004       745            push    ar4
00B4 C005       746            push    ar5
00B6 C006       747            push    ar6
00B8 120000     748            lcall   _Timer3us
00BB D006       749            pop     ar6
00BD D005       750            pop     ar5
00BF D004       751            pop     ar4
00C1 D003       752            pop     ar3
00C3 D002       753            pop     ar2
00C5 0E         754            inc     r6
00C6 8000       755            sjmp    L005001?
00C8            756   L005007?:
00C8            757   ;        C:\ELEC291\Lab5\Reference\ref1.c:163: for(j=0; j<ms; j++)
00C8 0C         758            inc     r4
00C9 BC0008     759            cjne    r4,#0x00,L005005?
00CC 0D         760            inc     r5
00CD 8000       761            sjmp    L005005?
00CF            762   L005009?:
00CF 22         763            ret
00D0            764   ;------------------------------------------------------------
00D0            765   ;Allocation info for local variables in function 'TIMER0_Init'
00D0            766   ;------------------------------------------------------------
00D0            767   ;------------------------------------------------------------
00D0            768   ;        C:\ELEC291\Lab5\Reference\ref1.c:168: void TIMER0_Init(void)
00D0            769   ;        -----------------------------------------
00D0            770   ;         function TIMER0_Init
00D0            771   ;        -----------------------------------------
00D0            772   _TIMER0_Init:
00D0            773   ;        C:\ELEC291\Lab5\Reference\ref1.c:170: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
00D0 5389F0     774            anl     _TMOD,#0xF0
00D3            775   ;        C:\ELEC291\Lab5\Reference\ref1.c:171: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
00D3 438901     776            orl     _TMOD,#0x01
00D6            777   ;        C:\ELEC291\Lab5\Reference\ref1.c:172: TR0=0; // Stop Timer/Counter 0
00D6 C28C       778            clr     _TR0
00D8 22         779            ret
00D9            780   ;------------------------------------------------------------
00D9            781   ;Allocation info for local variables in function 'InitPinADC'
00D9            782   ;------------------------------------------------------------
00D9            783   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
00D9            784   ;portno                    Allocated to registers r2 
00D9            785   ;mask                      Allocated to registers r3 
00D9            786   ;------------------------------------------------------------
00D9            787   ;        C:\ELEC291\Lab5\Reference\ref1.c:177: void InitPinADC (unsigned char portno, unsigned char pinno)
00D9            788   ;        -----------------------------------------
00D9            789   ;         function InitPinADC
00D9            790   ;        -----------------------------------------
00D9            791   _InitPinADC:
00D9 AA82       792            mov     r2,dpl
00DB            793   ;        C:\ELEC291\Lab5\Reference\ref1.c:181: mask=1<<pinno;
00DB 85D8F0     794            mov     b,_InitPinADC_PARM_2
00DE 05F0       795            inc     b
00E0 7401       796            mov     a,#0x01
00E2 8000       797            sjmp    L007013?
00E4            798   L007011?:
00E4 25E0       799            add     a,acc
00E6            800   L007013?:
00E6 D5F0C8     801            djnz    b,L007011?
00E9 FB         802            mov     r3,a
00EA            803   ;        C:\ELEC291\Lab5\Reference\ref1.c:183: SFRPAGE = 0x20;
00EA 75A720     804            mov     _SFRPAGE,#0x20
00ED            805   ;        C:\ELEC291\Lab5\Reference\ref1.c:184: switch (portno)
00ED BA0008     806            cjne    r2,#0x00,L007014?
00F0 8000       807            sjmp    L007001?
00F2            808   L007014?:
00F2 BA0188     809            cjne    r2,#0x01,L007015?
00F5 8000       810            sjmp    L007002?
00F7            811   L007015?:
00F7            812   ;        C:\ELEC291\Lab5\Reference\ref1.c:186: case 0:
00F7 BA0208     813            cjne    r2,#0x02,L007005?
00FA 8000       814            sjmp    L007003?
00FC            815   L007001?:
00FC            816   ;        C:\ELEC291\Lab5\Reference\ref1.c:187: P0MDIN &= (~mask); // Set pin as analog input
00FC EB         817            mov     a,r3
00FD F4         818            cpl     a
00FE FA         819            mov     r2,a
00FF 52F1       820            anl     _P0MDIN,a
0101            821   ;        C:\ELEC291\Lab5\Reference\ref1.c:188: P0SKIP |= mask; // Skip Crossbar decoding for this pin
0101 EB         822            mov     a,r3
0102 42D4       823            orl     _P0SKIP,a
0104            824   ;        C:\ELEC291\Lab5\Reference\ref1.c:189: break;
0104            825   ;        C:\ELEC291\Lab5\Reference\ref1.c:190: case 1:
0104 8000       826            sjmp    L007005?
0106            827   L007002?:
0106            828   ;        C:\ELEC291\Lab5\Reference\ref1.c:191: P1MDIN &= (~mask); // Set pin as analog input
0106 EB         829            mov     a,r3
0107 F4         830            cpl     a
0108 FA         831            mov     r2,a
0109 52F2       832            anl     _P1MDIN,a
010B            833   ;        C:\ELEC291\Lab5\Reference\ref1.c:192: P1SKIP |= mask; // Skip Crossbar decoding for this pin
010B EB         834            mov     a,r3
010C 42D5       835            orl     _P1SKIP,a
010E            836   ;        C:\ELEC291\Lab5\Reference\ref1.c:193: break;
010E            837   ;        C:\ELEC291\Lab5\Reference\ref1.c:194: case 2:
010E 8000       838            sjmp    L007005?
0110            839   L007003?:
0110            840   ;        C:\ELEC291\Lab5\Reference\ref1.c:195: P2MDIN &= (~mask); // Set pin as analog input
0110 EB         841            mov     a,r3
0111 F4         842            cpl     a
0112 FA         843            mov     r2,a
0113 52F3       844            anl     _P2MDIN,a
0115            845   ;        C:\ELEC291\Lab5\Reference\ref1.c:196: P2SKIP |= mask; // Skip Crossbar decoding for this pin
0115 EB         846            mov     a,r3
0116 42CC       847            orl     _P2SKIP,a
0118            848   ;        C:\ELEC291\Lab5\Reference\ref1.c:200: }
0118            849   L007005?:
0118            850   ;        C:\ELEC291\Lab5\Reference\ref1.c:201: SFRPAGE = 0x00;
0118 75A700     851            mov     _SFRPAGE,#0x00
011B 22         852            ret
011C            853   ;------------------------------------------------------------
011C            854   ;Allocation info for local variables in function 'ADC_at_Pin'
011C            855   ;------------------------------------------------------------
011C            856   ;pin                       Allocated to registers 
011C            857   ;------------------------------------------------------------
011C            858   ;        C:\ELEC291\Lab5\Reference\ref1.c:204: unsigned int ADC_at_Pin(unsigned char pin)
011C            859   ;        -----------------------------------------
011C            860   ;         function ADC_at_Pin
011C            861   ;        -----------------------------------------
011C            862   _ADC_at_Pin:
011C 8582BB     863            mov     _ADC0MX,dpl
011F            864   ;        C:\ELEC291\Lab5\Reference\ref1.c:207: ADINT = 0;
011F C2ED       865            clr     _ADINT
0121            866   ;        C:\ELEC291\Lab5\Reference\ref1.c:208: ADBUSY = 1;     // Convert voltage at the pin
0121 D2EC       867            setb    _ADBUSY
0123            868   ;        C:\ELEC291\Lab5\Reference\ref1.c:209: while (!ADINT); // Wait for conversion to complete
0123            869   L008001?:
0123 30ED88     870            jnb     _ADINT,L008001?
0126            871   ;        C:\ELEC291\Lab5\Reference\ref1.c:210: return (ADC0);
0126 85BD82     872            mov     dpl,_ADC0
0129 85BE83     873            mov     dph,(_ADC0 >> 8)
012C 22         874            ret
012D            875   ;------------------------------------------------------------
012D            876   ;Allocation info for local variables in function 'Volts_at_Pin'
012D            877   ;------------------------------------------------------------
012D            878   ;pin                       Allocated to registers r2 
012D            879   ;------------------------------------------------------------
012D            880   ;        C:\ELEC291\Lab5\Reference\ref1.c:213: float Volts_at_Pin(unsigned char pin)
012D            881   ;        -----------------------------------------
012D            882   ;         function Volts_at_Pin
012D            883   ;        -----------------------------------------
012D            884   _Volts_at_Pin:
012D            885   ;        C:\ELEC291\Lab5\Reference\ref1.c:215: return ((ADC_at_Pin(pin)*VDD)/0b_0011_1111_1111_1111);
012D 120000     886            lcall   _ADC_at_Pin
0130 120000     887            lcall   ___uint2fs
0133 AA82       888            mov     r2,dpl
0135 AB83       889            mov     r3,dph
0137 ACF0       890            mov     r4,b
0139 FD         891            mov     r5,a
013A C002       892            push    ar2
013C C003       893            push    ar3
013E C004       894            push    ar4
0140 C005       895            push    ar5
0142 906C8B     896            mov     dptr,#0x6C8B
0145 75F053     897            mov     b,#0x53
0148 7440       898            mov     a,#0x40
014A 120000     899            lcall   ___fsmul
014D AA82       900            mov     r2,dpl
014F AB83       901            mov     r3,dph
0151 ACF0       902            mov     r4,b
0153 FD         903            mov     r5,a
0154 E581       904            mov     a,sp
0156 24FC       905            add     a,#0xfc
0158 F581       906            mov     sp,a
015A E4         907            clr     a
015B C0E0       908            push    acc
015D 74FC       909            mov     a,#0xFC
015F C0E0       910            push    acc
0161 747F       911            mov     a,#0x7F
0163 C0E0       912            push    acc
0165 7446       913            mov     a,#0x46
0167 C0E0       914            push    acc
0169 8A82       915            mov     dpl,r2
016B 8B83       916            mov     dph,r3
016D 8CF0       917            mov     b,r4
016F ED         918            mov     a,r5
0170 120000     919            lcall   ___fsdiv
0173 AA82       920            mov     r2,dpl
0175 AB83       921            mov     r3,dph
0177 ACF0       922            mov     r4,b
0179 FD         923            mov     r5,a
017A E581       924            mov     a,sp
017C 24FC       925            add     a,#0xfc
017E F581       926            mov     sp,a
0180 8A82       927            mov     dpl,r2
0182 8B83       928            mov     dph,r3
0184 8CF0       929            mov     b,r4
0186 ED         930            mov     a,r5
0187 22         931            ret
0188            932   ;------------------------------------------------------------
0188            933   ;Allocation info for local variables in function 'LCD_pulse'
0188            934   ;------------------------------------------------------------
0188            935   ;------------------------------------------------------------
0188            936   ;        C:\ELEC291\Lab5\Reference\ref1.c:219: void LCD_pulse (void)
0188            937   ;        -----------------------------------------
0188            938   ;         function LCD_pulse
0188            939   ;        -----------------------------------------
0188            940   _LCD_pulse:
0188            941   ;        C:\ELEC291\Lab5\Reference\ref1.c:221: LCD_E=1;
0188 D2A0       942            setb    _P2_0
018A            943   ;        C:\ELEC291\Lab5\Reference\ref1.c:222: Timer3us(40);
018A 758228     944            mov     dpl,#0x28
018D 120000     945            lcall   _Timer3us
0190            946   ;        C:\ELEC291\Lab5\Reference\ref1.c:223: LCD_E=0;
0190 C2A0       947            clr     _P2_0
0192 22         948            ret
0193            949   ;------------------------------------------------------------
0193            950   ;Allocation info for local variables in function 'LCD_byte'
0193            951   ;------------------------------------------------------------
0193            952   ;x                         Allocated to registers r2 
0193            953   ;------------------------------------------------------------
0193            954   ;        C:\ELEC291\Lab5\Reference\ref1.c:225: void LCD_byte (unsigned char x)
0193            955   ;        -----------------------------------------
0193            956   ;         function LCD_byte
0193            957   ;        -----------------------------------------
0193            958   _LCD_byte:
0193 AA82       959            mov     r2,dpl
0195            960   ;        C:\ELEC291\Lab5\Reference\ref1.c:228: ACC=x; //Send high nible
0195 8AE0       961            mov     _ACC,r2
0197            962   ;        C:\ELEC291\Lab5\Reference\ref1.c:229: LCD_D7=ACC_7;
0197 A2E7       963            mov     c,_ACC_7
0199 9290       964            mov     _P1_0,c
019B            965   ;        C:\ELEC291\Lab5\Reference\ref1.c:230: LCD_D6=ACC_6;
019B A2E6       966            mov     c,_ACC_6
019D 9291       967            mov     _P1_1,c
019F            968   ;        C:\ELEC291\Lab5\Reference\ref1.c:231: LCD_D5=ACC_5;
019F A2E5       969            mov     c,_ACC_5
01A1 9292       970            mov     _P1_2,c
01A3            971   ;        C:\ELEC291\Lab5\Reference\ref1.c:232: LCD_D4=ACC_4;
01A3 A2E4       972            mov     c,_ACC_4
01A5 9293       973            mov     _P1_3,c
01A7            974   ;        C:\ELEC291\Lab5\Reference\ref1.c:233: LCD_pulse();
01A7 C002       975            push    ar2
01A9 120000     976            lcall   _LCD_pulse
01AC            977   ;        C:\ELEC291\Lab5\Reference\ref1.c:234: Timer3us(40);
01AC 758228     978            mov     dpl,#0x28
01AF 120000     979            lcall   _Timer3us
01B2 D002       980            pop     ar2
01B4            981   ;        C:\ELEC291\Lab5\Reference\ref1.c:235: ACC=x; //Send low nible
01B4 8AE0       982            mov     _ACC,r2
01B6            983   ;        C:\ELEC291\Lab5\Reference\ref1.c:236: LCD_D7=ACC_3;
01B6 A2E3       984            mov     c,_ACC_3
01B8 9290       985            mov     _P1_0,c
01BA            986   ;        C:\ELEC291\Lab5\Reference\ref1.c:237: LCD_D6=ACC_2;
01BA A2E2       987            mov     c,_ACC_2
01BC 9291       988            mov     _P1_1,c
01BE            989   ;        C:\ELEC291\Lab5\Reference\ref1.c:238: LCD_D5=ACC_1;
01BE A2E1       990            mov     c,_ACC_1
01C0 9292       991            mov     _P1_2,c
01C2            992   ;        C:\ELEC291\Lab5\Reference\ref1.c:239: LCD_D4=ACC_0;
01C2 A2E0       993            mov     c,_ACC_0
01C4 9293       994            mov     _P1_3,c
01C6            995   ;        C:\ELEC291\Lab5\Reference\ref1.c:240: LCD_pulse();
01C6 020000     996            ljmp    _LCD_pulse
01C9            997   ;------------------------------------------------------------
01C9            998   ;Allocation info for local variables in function 'WriteData'
01C9            999   ;------------------------------------------------------------
01C9           1000   ;x                         Allocated to registers r2 
01C9           1001   ;------------------------------------------------------------
01C9           1002   ;        C:\ELEC291\Lab5\Reference\ref1.c:243: void WriteData (unsigned char x)
01C9           1003   ;        -----------------------------------------
01C9           1004   ;         function WriteData
01C9           1005   ;        -----------------------------------------
01C9           1006   _WriteData:
01C9 AA82      1007            mov     r2,dpl
01CB           1008   ;        C:\ELEC291\Lab5\Reference\ref1.c:245: LCD_RS=1;
01CB D297      1009            setb    _P1_7
01CD           1010   ;        C:\ELEC291\Lab5\Reference\ref1.c:246: LCD_byte(x);
01CD 8A82      1011            mov     dpl,r2
01CF 120000    1012            lcall   _LCD_byte
01D2           1013   ;        C:\ELEC291\Lab5\Reference\ref1.c:247: waitms(2);
01D2 900002    1014            mov     dptr,#0x0002
01D5 020000    1015            ljmp    _waitms
01D8           1016   ;------------------------------------------------------------
01D8           1017   ;Allocation info for local variables in function 'WriteCommand'
01D8           1018   ;------------------------------------------------------------
01D8           1019   ;x                         Allocated to registers r2 
01D8           1020   ;------------------------------------------------------------
01D8           1021   ;        C:\ELEC291\Lab5\Reference\ref1.c:250: void WriteCommand (unsigned char x)
01D8           1022   ;        -----------------------------------------
01D8           1023   ;         function WriteCommand
01D8           1024   ;        -----------------------------------------
01D8           1025   _WriteCommand:
01D8 AA82      1026            mov     r2,dpl
01DA           1027   ;        C:\ELEC291\Lab5\Reference\ref1.c:252: LCD_RS=0;
01DA C297      1028            clr     _P1_7
01DC           1029   ;        C:\ELEC291\Lab5\Reference\ref1.c:253: LCD_byte(x);
01DC 8A82      1030            mov     dpl,r2
01DE 120000    1031            lcall   _LCD_byte
01E1           1032   ;        C:\ELEC291\Lab5\Reference\ref1.c:254: waitms(5);
01E1 900005    1033            mov     dptr,#0x0005
01E4 020000    1034            ljmp    _waitms
01E7           1035   ;------------------------------------------------------------
01E7           1036   ;Allocation info for local variables in function 'LCD_4BIT'
01E7           1037   ;------------------------------------------------------------
01E7           1038   ;------------------------------------------------------------
01E7           1039   ;        C:\ELEC291\Lab5\Reference\ref1.c:257: void LCD_4BIT (void)
01E7           1040   ;        -----------------------------------------
01E7           1041   ;         function LCD_4BIT
01E7           1042   ;        -----------------------------------------
01E7           1043   _LCD_4BIT:
01E7           1044   ;        C:\ELEC291\Lab5\Reference\ref1.c:259: LCD_E=0; // Resting state of LCD's enable is zero
01E7 C2A0      1045            clr     _P2_0
01E9           1046   ;        C:\ELEC291\Lab5\Reference\ref1.c:261: waitms(20);
01E9 900014    1047            mov     dptr,#0x0014
01EC 120000    1048            lcall   _waitms
01EF           1049   ;        C:\ELEC291\Lab5\Reference\ref1.c:263: WriteCommand(0x33);
01EF 758233    1050            mov     dpl,#0x33
01F2 120000    1051            lcall   _WriteCommand
01F5           1052   ;        C:\ELEC291\Lab5\Reference\ref1.c:264: WriteCommand(0x33);
01F5 758233    1053            mov     dpl,#0x33
01F8 120000    1054            lcall   _WriteCommand
01FB           1055   ;        C:\ELEC291\Lab5\Reference\ref1.c:265: WriteCommand(0x32); // Change to 4-bit mode
01FB 758232    1056            mov     dpl,#0x32
01FE 120000    1057            lcall   _WriteCommand
0201           1058   ;        C:\ELEC291\Lab5\Reference\ref1.c:268: WriteCommand(0x28);
0201 758228    1059            mov     dpl,#0x28
0204 120000    1060            lcall   _WriteCommand
0207           1061   ;        C:\ELEC291\Lab5\Reference\ref1.c:269: WriteCommand(0x0c);
0207 75820C    1062            mov     dpl,#0x0C
020A 120000    1063            lcall   _WriteCommand
020D           1064   ;        C:\ELEC291\Lab5\Reference\ref1.c:270: WriteCommand(0x01); // Clear screen command (takes some time)
020D 758201    1065            mov     dpl,#0x01
0210 120000    1066            lcall   _WriteCommand
0213           1067   ;        C:\ELEC291\Lab5\Reference\ref1.c:271: waitms(20); // Wait for clear screen command to finsih.
0213 900014    1068            mov     dptr,#0x0014
0216 020000    1069            ljmp    _waitms
0219           1070   ;------------------------------------------------------------
0219           1071   ;Allocation info for local variables in function 'LCDprint'
0219           1072   ;------------------------------------------------------------
0219           1073   ;line                      Allocated with name '_LCDprint_PARM_2'
0219           1074   ;string                    Allocated to registers r2 r3 r4 
0219           1075   ;j                         Allocated to registers r5 r6 
0219           1076   ;------------------------------------------------------------
0219           1077   ;        C:\ELEC291\Lab5\Reference\ref1.c:274: void LCDprint(char * string, unsigned char line, bit clear)
0219           1078   ;        -----------------------------------------
0219           1079   ;         function LCDprint
0219           1080   ;        -----------------------------------------
0219           1081   _LCDprint:
0219 AA82      1082            mov     r2,dpl
021B AB83      1083            mov     r3,dph
021D ACF0      1084            mov     r4,b
021F           1085   ;        C:\ELEC291\Lab5\Reference\ref1.c:278: WriteCommand(line==2?0xc0:0x80);
021F 7402      1086            mov     a,#0x02
0221 B568C8    1087            cjne    a,_LCDprint_PARM_2,L015013?
0224 7DC0      1088            mov     r5,#0xC0
0226 8000      1089            sjmp    L015014?
0228           1090   L015013?:
0228 7D80      1091            mov     r5,#0x80
022A           1092   L015014?:
022A 8D82      1093            mov     dpl,r5
022C C002      1094            push    ar2
022E C003      1095            push    ar3
0230 C004      1096            push    ar4
0232 120000    1097            lcall   _WriteCommand
0235           1098   ;        C:\ELEC291\Lab5\Reference\ref1.c:279: waitms(5);
0235 900005    1099            mov     dptr,#0x0005
0238 120000    1100            lcall   _waitms
023B D004      1101            pop     ar4
023D D003      1102            pop     ar3
023F D002      1103            pop     ar2
0241           1104   ;        C:\ELEC291\Lab5\Reference\ref1.c:280: for(j=0; string[j]!=0; j++)       WriteData(string[j]);// Write the message
0241 7D00      1105            mov     r5,#0x00
0243 7E00      1106            mov     r6,#0x00
0245           1107   L015003?:
0245 ED        1108            mov     a,r5
0246 2A        1109            add     a,r2
0247 FF        1110            mov     r7,a
0248 EE        1111            mov     a,r6
0249 3B        1112            addc    a,r3
024A F8        1113            mov     r0,a
024B 8C01      1114            mov     ar1,r4
024D 8F82      1115            mov     dpl,r7
024F 8883      1116            mov     dph,r0
0251 89F0      1117            mov     b,r1
0253 120000    1118            lcall   __gptrget
0256 FF        1119            mov     r7,a
0257 6000      1120            jz      L015006?
0259 8F82      1121            mov     dpl,r7
025B C002      1122            push    ar2
025D C003      1123            push    ar3
025F C004      1124            push    ar4
0261 C005      1125            push    ar5
0263 C006      1126            push    ar6
0265 120000    1127            lcall   _WriteData
0268 D006      1128            pop     ar6
026A D005      1129            pop     ar5
026C D004      1130            pop     ar4
026E D003      1131            pop     ar3
0270 D002      1132            pop     ar2
0272 0D        1133            inc     r5
0273 BD0048    1134            cjne    r5,#0x00,L015003?
0276 0E        1135            inc     r6
0277 8000      1136            sjmp    L015003?
0279           1137   L015006?:
0279           1138   ;        C:\ELEC291\Lab5\Reference\ref1.c:281: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
0279 307808    1139            jnb     _LCDprint_PARM_3,L015011?
027C 8D02      1140            mov     ar2,r5
027E 8E03      1141            mov     ar3,r6
0280           1142   L015007?:
0280 C3        1143            clr     c
0281 EA        1144            mov     a,r2
0282 9410      1145            subb    a,#0x10
0284 EB        1146            mov     a,r3
0285 6480      1147            xrl     a,#0x80
0287 9480      1148            subb    a,#0x80
0289 5000      1149            jnc     L015011?
028B 758220    1150            mov     dpl,#0x20
028E C002      1151            push    ar2
0290 C003      1152            push    ar3
0292 120000    1153            lcall   _WriteData
0295 D003      1154            pop     ar3
0297 D002      1155            pop     ar2
0299 0A        1156            inc     r2
029A BA0048    1157            cjne    r2,#0x00,L015007?
029D 0B        1158            inc     r3
029E 8000      1159            sjmp    L015007?
02A0           1160   L015011?:
02A0 22        1161            ret
02A1           1162   ;------------------------------------------------------------
02A1           1163   ;Allocation info for local variables in function 'LCDprint2'
02A1           1164   ;------------------------------------------------------------
02A1           1165   ;line                      Allocated with name '_LCDprint2_PARM_2'
02A1           1166   ;col                       Allocated with name '_LCDprint2_PARM_3'
02A1           1167   ;string                    Allocated to registers r2 r3 r4 
02A1           1168   ;j                         Allocated to registers r5 r6 
02A1           1169   ;------------------------------------------------------------
02A1           1170   ;        C:\ELEC291\Lab5\Reference\ref1.c:283: void LCDprint2(char * string, unsigned char line, unsigned char col)
02A1           1171   ;        -----------------------------------------
02A1           1172   ;         function LCDprint2
02A1           1173   ;        -----------------------------------------
02A1           1174   _LCDprint2:
02A1 AA82      1175            mov     r2,dpl
02A3 AB83      1176            mov     r3,dph
02A5 ACF0      1177            mov     r4,b
02A7           1178   ;        C:\ELEC291\Lab5\Reference\ref1.c:287: WriteCommand(line==2?0xc0|col:0x80|col); // Move cursor to line and column
02A7 7402      1179            mov     a,#0x02
02A9 B51888    1180            cjne    a,_LCDprint2_PARM_2,L016007?
02AC 74C0      1181            mov     a,#0xC0
02AE 45C8      1182            orl     a,_LCDprint2_PARM_3
02B0 FD        1183            mov     r5,a
02B1 8000      1184            sjmp    L016008?
02B3           1185   L016007?:
02B3 7480      1186            mov     a,#0x80
02B5 45C8      1187            orl     a,_LCDprint2_PARM_3
02B7 FD        1188            mov     r5,a
02B8           1189   L016008?:
02B8 8D82      1190            mov     dpl,r5
02BA C002      1191            push    ar2
02BC C003      1192            push    ar3
02BE C004      1193            push    ar4
02C0 120000    1194            lcall   _WriteCommand
02C3 D004      1195            pop     ar4
02C5 D003      1196            pop     ar3
02C7 D002      1197            pop     ar2
02C9           1198   ;        C:\ELEC291\Lab5\Reference\ref1.c:288: for(j=0; string[j]!=0; j++) WriteData(string[j]); // Write the message
02C9 7D00      1199            mov     r5,#0x00
02CB 7E00      1200            mov     r6,#0x00
02CD           1201   L016001?:
02CD ED        1202            mov     a,r5
02CE 2A        1203            add     a,r2
02CF FF        1204            mov     r7,a
02D0 EE        1205            mov     a,r6
02D1 3B        1206            addc    a,r3
02D2 F8        1207            mov     r0,a
02D3 8C01      1208            mov     ar1,r4
02D5 8F82      1209            mov     dpl,r7
02D7 8883      1210            mov     dph,r0
02D9 89F0      1211            mov     b,r1
02DB 120000    1212            lcall   __gptrget
02DE FF        1213            mov     r7,a
02DF 6000      1214            jz      L016005?
02E1 8F82      1215            mov     dpl,r7
02E3 C002      1216            push    ar2
02E5 C003      1217            push    ar3
02E7 C004      1218            push    ar4
02E9 C005      1219            push    ar5
02EB C006      1220            push    ar6
02ED 120000    1221            lcall   _WriteData
02F0 D006      1222            pop     ar6
02F2 D005      1223            pop     ar5
02F4 D004      1224            pop     ar4
02F6 D003      1225            pop     ar3
02F8 D002      1226            pop     ar2
02FA 0D        1227            inc     r5
02FB BD0008    1228            cjne    r5,#0x00,L016001?
02FE 0E        1229            inc     r6
02FF 8000      1230            sjmp    L016001?
0301           1231   L016005?:
0301 22        1232            ret
0302           1233   ;------------------------------------------------------------
0302           1234   ;Allocation info for local variables in function 'Get_ADC'
0302           1235   ;------------------------------------------------------------
0302           1236   ;------------------------------------------------------------
0302           1237   ;        C:\ELEC291\Lab5\Reference\ref1.c:294: unsigned int Get_ADC (void)
0302           1238   ;        -----------------------------------------
0302           1239   ;         function Get_ADC
0302           1240   ;        -----------------------------------------
0302           1241   _Get_ADC:
0302           1242   ;        C:\ELEC291\Lab5\Reference\ref1.c:296: ADINT = 0;
0302 C2ED      1243            clr     _ADINT
0304           1244   ;        C:\ELEC291\Lab5\Reference\ref1.c:297: ADBUSY = 1;
0304 D2EC      1245            setb    _ADBUSY
0306           1246   ;        C:\ELEC291\Lab5\Reference\ref1.c:298: while (!ADINT); // Wait for conversion to complete
0306           1247   L017001?:
0306 30ED88    1248            jnb     _ADINT,L017001?
0309           1249   ;        C:\ELEC291\Lab5\Reference\ref1.c:299: return (ADC0);
0309 85BD82    1250            mov     dpl,_ADC0
030C 85BE83    1251            mov     dph,(_ADC0 >> 8)
030F 22        1252            ret
0310           1253   ;------------------------------------------------------------
0310           1254   ;Allocation info for local variables in function 'main'
0310           1255   ;------------------------------------------------------------
0310           1256   ;v                         Allocated with name '_main_v_1_77'
0310           1257   ;buffer                    Allocated with name '_main_buffer_1_77'
0310           1258   ;half_period               Allocated with name '_main_half_period_1_77'
0310           1259   ;sloc0                     Allocated with name '_main_sloc0_1_0'
0310           1260   ;------------------------------------------------------------
0310           1261   ;        C:\ELEC291\Lab5\Reference\ref1.c:303: void main (void)
0310           1262   ;        -----------------------------------------
0310           1263   ;         function main
0310           1264   ;        -----------------------------------------
0310           1265   _main:
0310           1266   ;        C:\ELEC291\Lab5\Reference\ref1.c:309: LCD_4BIT();
0310 120000    1267            lcall   _LCD_4BIT
0313           1268   ;        C:\ELEC291\Lab5\Reference\ref1.c:310: TIMER0_Init();
0313 120000    1269            lcall   _TIMER0_Init
0316           1270   ;        C:\ELEC291\Lab5\Reference\ref1.c:312: waitms(500); // Give PuTTy a chance to start before sending
0316 9001F4    1271            mov     dptr,#0x01F4
0319 120000    1272            lcall   _waitms
031C           1273   ;        C:\ELEC291\Lab5\Reference\ref1.c:313: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
031C 74C8      1274            mov     a,#__str_0
031E C0E0      1275            push    acc
0320 74BF      1276            mov     a,#(__str_0 >> 8)
0322 C0E0      1277            push    acc
0324 7480      1278            mov     a,#0x80
0326 C0E0      1279            push    acc
0328 120000    1280            lcall   _printf
032B 1581      1281            dec     sp
032D 1581      1282            dec     sp
032F 1581      1283            dec     sp
0331           1284   ;        C:\ELEC291\Lab5\Reference\ref1.c:318: __FILE__, __DATE__, __TIME__);
0331           1285   ;        C:\ELEC291\Lab5\Reference\ref1.c:317: "Compiled: %s, %s\n\n",
0331 7448      1286            mov     a,#__str_4
0333 C0E0      1287            push    acc
0335 74C0      1288            mov     a,#(__str_4 >> 8)
0337 C0E0      1289            push    acc
0339 7480      1290            mov     a,#0x80
033B C0E0      1291            push    acc
033D 7488      1292            mov     a,#__str_3
033F C0E0      1293            push    acc
0341 74C0      1294            mov     a,#(__str_3 >> 8)
0343 C0E0      1295            push    acc
0345 7480      1296            mov     a,#0x80
0347 C0E0      1297            push    acc
0349 74C8      1298            mov     a,#__str_2
034B C0E0      1299            push    acc
034D 74C0      1300            mov     a,#(__str_2 >> 8)
034F C0E0      1301            push    acc
0351 7480      1302            mov     a,#0x80
0353 C0E0      1303            push    acc
0355 7408      1304            mov     a,#__str_1
0357 C0E0      1305            push    acc
0359 74C1      1306            mov     a,#(__str_1 >> 8)
035B C0E0      1307            push    acc
035D 7480      1308            mov     a,#0x80
035F C0E0      1309            push    acc
0361 120000    1310            lcall   _printf
0364 E581      1311            mov     a,sp
0366 24F4      1312            add     a,#0xf4
0368 F581      1313            mov     sp,a
036A           1314   ;        C:\ELEC291\Lab5\Reference\ref1.c:320: InitPinADC(2, 2); // Configure P2.2 as analog input
036A 75D802    1315            mov     _InitPinADC_PARM_2,#0x02
036D 758202    1316            mov     dpl,#0x02
0370 120000    1317            lcall   _InitPinADC
0373           1318   ;        C:\ELEC291\Lab5\Reference\ref1.c:321: InitPinADC(2, 3); // Configure P2.3 as analog input
0373 75D803    1319            mov     _InitPinADC_PARM_2,#0x03
0376 758202    1320            mov     dpl,#0x02
0379 120000    1321            lcall   _InitPinADC
037C           1322   ;        C:\ELEC291\Lab5\Reference\ref1.c:322: InitPinADC(2, 4); // Configure P2.4 as analog input
037C 75D804    1323            mov     _InitPinADC_PARM_2,#0x04
037F 758202    1324            mov     dpl,#0x02
0382 120000    1325            lcall   _InitPinADC
0385           1326   ;        C:\ELEC291\Lab5\Reference\ref1.c:323: InitPinADC(2, 5); // Configure P2.5 as analog input
0385 75D805    1327            mov     _InitPinADC_PARM_2,#0x05
0388 758202    1328            mov     dpl,#0x02
038B 120000    1329            lcall   _InitPinADC
038E           1330   ;        C:\ELEC291\Lab5\Reference\ref1.c:324: InitPinADC(0, 1);
038E 75D801    1331            mov     _InitPinADC_PARM_2,#0x01
0391 758200    1332            mov     dpl,#0x00
0394 120000    1333            lcall   _InitPinADC
0397           1334   ;        C:\ELEC291\Lab5\Reference\ref1.c:325: InitADC();
0397 120000    1335            lcall   _InitADC
039A           1336   ;        C:\ELEC291\Lab5\Reference\ref1.c:328: while(1)
039A           1337   L018014?:
039A           1338   ;        C:\ELEC291\Lab5\Reference\ref1.c:333: ADC0MX=QFP32_MUX_P0_1;
039A 75BB00    1339            mov     _ADC0MX,#0x00
039D           1340   ;        C:\ELEC291\Lab5\Reference\ref1.c:334: ADINT = 0;
039D C2ED      1341            clr     _ADINT
039F           1342   ;        C:\ELEC291\Lab5\Reference\ref1.c:335: ADBUSY=1;
039F D2EC      1343            setb    _ADBUSY
03A1           1344   ;        C:\ELEC291\Lab5\Reference\ref1.c:336: while (!ADINT); // Wait for conversion to complete
03A1           1345   L018001?:
03A1 30ED88    1346            jnb     _ADINT,L018001?
03A4           1347   ;        C:\ELEC291\Lab5\Reference\ref1.c:338: TL0=0;
03A4 758A00    1348            mov     _TL0,#0x00
03A7           1349   ;        C:\ELEC291\Lab5\Reference\ref1.c:339: TH0=0;
03A7 758C00    1350            mov     _TH0,#0x00
03AA           1351   ;        C:\ELEC291\Lab5\Reference\ref1.c:340: while (Get_ADC()!=0); // Wait for the signal to be zero
03AA           1352   L018004?:
03AA 120000    1353            lcall   _Get_ADC
03AD E582      1354            mov     a,dpl
03AF 8583F0    1355            mov     b,dph
03B2 45F0      1356            orl     a,b
03B4 7000      1357            jnz     L018004?
03B6           1358   ;        C:\ELEC291\Lab5\Reference\ref1.c:341: while (Get_ADC()==0); // Wait for the signal to be positive
03B6           1359   L018007?:
03B6 120000    1360            lcall   _Get_ADC
03B9 E582      1361            mov     a,dpl
03BB 8583F0    1362            mov     b,dph
03BE 45F0      1363            orl     a,b
03C0 6000      1364            jz      L018007?
03C2           1365   ;        C:\ELEC291\Lab5\Reference\ref1.c:342: TR0=1; // Start the timer 0
03C2 D28C      1366            setb    _TR0
03C4           1367   ;        C:\ELEC291\Lab5\Reference\ref1.c:343: while (Get_ADC()!=0); // Wait for the signal to be zero again
03C4           1368   L018010?:
03C4 120000    1369            lcall   _Get_ADC
03C7 E582      1370            mov     a,dpl
03C9 8583F0    1371            mov     b,dph
03CC 45F0      1372            orl     a,b
03CE 7000      1373            jnz     L018010?
03D0           1374   ;        C:\ELEC291\Lab5\Reference\ref1.c:344: TR0=0; // Stop timer 0
03D0 C28C      1375            clr     _TR0
03D2           1376   ;        C:\ELEC291\Lab5\Reference\ref1.c:345: half_period=TH0*256.0+TL0; // The 16-bit number [TH0-TL0]
03D2 858C82    1377            mov     dpl,_TH0
03D5 120000    1378            lcall   ___uchar2fs
03D8 AA82      1379            mov     r2,dpl
03DA AB83      1380            mov     r3,dph
03DC ACF0      1381            mov     r4,b
03DE FD        1382            mov     r5,a
03DF C002      1383            push    ar2
03E1 C003      1384            push    ar3
03E3 C004      1385            push    ar4
03E5 C005      1386            push    ar5
03E7 900000    1387            mov     dptr,#0x0000
03EA 75F080    1388            mov     b,#0x80
03ED 7443      1389            mov     a,#0x43
03EF 120000    1390            lcall   ___fsmul
03F2 858288    1391            mov     _main_sloc0_1_0,dpl
03F5 858389    1392            mov     (_main_sloc0_1_0 + 1),dph
03F8 85F08A    1393            mov     (_main_sloc0_1_0 + 2),b
03FB F58B      1394            mov     (_main_sloc0_1_0 + 3),a
03FD E581      1395            mov     a,sp
03FF 24FC      1396            add     a,#0xfc
0401 F581      1397            mov     sp,a
0403 AE8A      1398            mov     r6,_TL0
0405 7F00      1399            mov     r7,#0x00
0407 8E82      1400            mov     dpl,r6
0409 8F83      1401            mov     dph,r7
040B 120000    1402            lcall   ___sint2fs
040E AE82      1403            mov     r6,dpl
0410 AF83      1404            mov     r7,dph
0412 AAF0      1405            mov     r2,b
0414 FB        1406            mov     r3,a
0415 C006      1407            push    ar6
0417 C007      1408            push    ar7
0419 C002      1409            push    ar2
041B C003      1410            push    ar3
041D 858882    1411            mov     dpl,_main_sloc0_1_0
0420 858983    1412            mov     dph,(_main_sloc0_1_0 + 1)
0423 858AF0    1413            mov     b,(_main_sloc0_1_0 + 2)
0426 E58B      1414            mov     a,(_main_sloc0_1_0 + 3)
0428 120000    1415            lcall   ___fsadd
042B 858248    1416            mov     _main_half_period_1_77,dpl
042E 858349    1417            mov     (_main_half_period_1_77 + 1),dph
0431 85F04A    1418            mov     (_main_half_period_1_77 + 2),b
0434 F54B      1419            mov     (_main_half_period_1_77 + 3),a
0436 E581      1420            mov     a,sp
0438 24FC      1421            add     a,#0xfc
043A F581      1422            mov     sp,a
043C           1423   ;        C:\ELEC291\Lab5\Reference\ref1.c:347: overflow_count=65536-(half_period/2);
043C E4        1424            clr     a
043D C0E0      1425            push    acc
043F C0E0      1426            push    acc
0441 C0E0      1427            push    acc
0443 7440      1428            mov     a,#0x40
0445 C0E0      1429            push    acc
0447 854882    1430            mov     dpl,_main_half_period_1_77
044A 854983    1431            mov     dph,(_main_half_period_1_77 + 1)
044D 854AF0    1432            mov     b,(_main_half_period_1_77 + 2)
0450 E54B      1433            mov     a,(_main_half_period_1_77 + 3)
0452 120000    1434            lcall   ___fsdiv
0455 AE82      1435            mov     r6,dpl
0457 AF83      1436            mov     r7,dph
0459 AAF0      1437            mov     r2,b
045B FB        1438            mov     r3,a
045C E581      1439            mov     a,sp
045E 24FC      1440            add     a,#0xfc
0460 F581      1441            mov     sp,a
0462 EB        1442            mov     a,r3
0463 B2E7      1443            cpl     acc.7
0465 8E82      1444            mov     dpl,r6
0467 8F83      1445            mov     dph,r7
0469 8AF0      1446            mov     b,r2
046B 120000    1447            lcall   ___fs2uchar
046E 8582A8    1448            mov     _overflow_count,dpl
0471           1449   ;        C:\ELEC291\Lab5\Reference\ref1.c:348: printf("%.4f\r",half_period);         
0471 C048      1450            push    _main_half_period_1_77
0473 C049      1451            push    (_main_half_period_1_77 + 1)
0475 C04A      1452            push    (_main_half_period_1_77 + 2)
0477 C04B      1453            push    (_main_half_period_1_77 + 3)
0479 7488      1454            mov     a,#__str_5
047B C0E0      1455            push    acc
047D 74C3      1456            mov     a,#(__str_5 >> 8)
047F C0E0      1457            push    acc
0481 7480      1458            mov     a,#0x80
0483 C0E0      1459            push    acc
0485 120000    1460            lcall   _printf
0488 E581      1461            mov     a,sp
048A 24F9      1462            add     a,#0xf9
048C F581      1463            mov     sp,a
048E           1464   ;        C:\ELEC291\Lab5\Reference\ref1.c:352: v[0] = Volts_at_Pin(QFP32_MUX_P2_2);
048E 75820F    1465            mov     dpl,#0x0F
0491 120000    1466            lcall   _Volts_at_Pin
0494 AA82      1467            mov     r2,dpl
0496 AB83      1468            mov     r3,dph
0498 ACF0      1469            mov     r4,b
049A FD        1470            mov     r5,a
049B 8AA8      1471            mov     _main_v_1_77,r2
049D 8BA9      1472            mov     (_main_v_1_77 + 1),r3
049F 8CAA      1473            mov     (_main_v_1_77 + 2),r4
04A1 8DAB      1474            mov     (_main_v_1_77 + 3),r5
04A3           1475   ;        C:\ELEC291\Lab5\Reference\ref1.c:353: v[1] = Volts_at_Pin(QFP32_MUX_P2_3);
04A3 758210    1476            mov     dpl,#0x10
04A6 120000    1477            lcall   _Volts_at_Pin
04A9 AA82      1478            mov     r2,dpl
04AB AB83      1479            mov     r3,dph
04AD ACF0      1480            mov     r4,b
04AF FD        1481            mov     r5,a
04B0 8AAC      1482            mov     (_main_v_1_77 + 0x0004),r2
04B2 8BAD      1483            mov     ((_main_v_1_77 + 0x0004) + 1),r3
04B4 8CAE      1484            mov     ((_main_v_1_77 + 0x0004) + 2),r4
04B6 8DAF      1485            mov     ((_main_v_1_77 + 0x0004) + 3),r5
04B8           1486   ;        C:\ELEC291\Lab5\Reference\ref1.c:354: v[2] = Volts_at_Pin(QFP32_MUX_P2_4);
04B8 758211    1487            mov     dpl,#0x11
04BB 120000    1488            lcall   _Volts_at_Pin
04BE AA82      1489            mov     r2,dpl
04C0 AB83      1490            mov     r3,dph
04C2 ACF0      1491            mov     r4,b
04C4 FD        1492            mov     r5,a
04C5 8AB0      1493            mov     (_main_v_1_77 + 0x0008),r2
04C7 8BB1      1494            mov     ((_main_v_1_77 + 0x0008) + 1),r3
04C9 8CB2      1495            mov     ((_main_v_1_77 + 0x0008) + 2),r4
04CB 8DB3      1496            mov     ((_main_v_1_77 + 0x0008) + 3),r5
04CD           1497   ;        C:\ELEC291\Lab5\Reference\ref1.c:355: v[3] = Volts_at_Pin(QFP32_MUX_P2_5);
04CD 758212    1498            mov     dpl,#0x12
04D0 120000    1499            lcall   _Volts_at_Pin
04D3 AA82      1500            mov     r2,dpl
04D5 AB83      1501            mov     r3,dph
04D7 ACF0      1502            mov     r4,b
04D9 FD        1503            mov     r5,a
04DA 8AB4      1504            mov     (_main_v_1_77 + 0x000c),r2
04DC 8BB5      1505            mov     ((_main_v_1_77 + 0x000c) + 1),r3
04DE 8CB6      1506            mov     ((_main_v_1_77 + 0x000c) + 2),r4
04E0 8DB7      1507            mov     ((_main_v_1_77 + 0x000c) + 3),r5
04E2           1508   ;        C:\ELEC291\Lab5\Reference\ref1.c:357: waitms(500);
04E2 9001F4    1509            mov     dptr,#0x01F4
04E5 120000    1510            lcall   _waitms
04E8           1511   ;        C:\ELEC291\Lab5\Reference\ref1.c:360: sprintf(buffer,"%f/r",half_period);
04E8 C048      1512            push    _main_half_period_1_77
04EA C049      1513            push    (_main_half_period_1_77 + 1)
04EC C04A      1514            push    (_main_half_period_1_77 + 2)
04EE C04B      1515            push    (_main_half_period_1_77 + 3)
04F0 74C8      1516            mov     a,#__str_6
04F2 C0E0      1517            push    acc
04F4 74C3      1518            mov     a,#(__str_6 >> 8)
04F6 C0E0      1519            push    acc
04F8 7480      1520            mov     a,#0x80
04FA C0E0      1521            push    acc
04FC 74F8      1522            mov     a,#_main_buffer_1_77
04FE C0E0      1523            push    acc
0500 74B4      1524            mov     a,#(_main_buffer_1_77 >> 8)
0502 C0E0      1525            push    acc
0504 7440      1526            mov     a,#0x40
0506 C0E0      1527            push    acc
0508 120000    1528            lcall   _sprintf
050B E581      1529            mov     a,sp
050D 24F6      1530            add     a,#0xf6
050F F581      1531            mov     sp,a
0511           1532   ;        C:\ELEC291\Lab5\Reference\ref1.c:361: LCDprint(buffer,1,1);
0511 756801    1533            mov     _LCDprint_PARM_2,#0x01
0514 D278      1534            setb    _LCDprint_PARM_3
0516 90B4F8    1535            mov     dptr,#_main_buffer_1_77
0519 75F040    1536            mov     b,#0x40
051C 120000    1537            lcall   _LCDprint
051F 020000    1538            ljmp    L018014?
0522           1539            rseg R_CSEG
0522           1540   
0000           1541            rseg R_XINIT
0000           1542   
0000           1543            rseg R_CONST
0000           1544   __str_0:
0000 1B        1545            db 0x1B
0001 5B324A    1546            db '[2J'
0004 00        1547            db 0x00
0005           1548   __str_1:
0005 41444320  1549            db 'ADC test program'
     74657374
     2070726F
     6772616D
0015 0A        1550            db 0x0A
0016 46696C65  1551            db 'File: %s'
     3A202573
001E 0A        1552            db 0x0A
001F 436F6D70  1553            db 'Compiled: %s, %s'
     696C6564
     3A202573
     2C202573
002F 0A        1554            db 0x0A
0030 0A        1555            db 0x0A
0031 00        1556            db 0x00
0032           1557   __str_2:
0032 433A      1558            db 'C:'
0034 5C        1559            db 0x5C
0035 454C4543  1560            db 'ELEC291'
     323931
003C 5C        1561            db 0x5C
003D 4C616235  1562            db 'Lab5'
0041 5C        1563            db 0x5C
0042 52656665  1564            db 'Reference'
     72656E63
     65
004B 5C        1565            db 0x5C
004C 72656631  1566            db 'ref1.c'
     2E63
0052 00        1567            db 0x00
0053           1568   __str_3:
0053 4D617220  1569            db 'Mar  3 2024'
     20332032
     303234
005E 00        1570            db 0x00
005F           1571   __str_4:
005F 31353A32  1572            db '15:23:14'
     333A3134
0067 00        1573            db 0x00
0068           1574   __str_5:
0068 252E3466  1575            db '%.4f'
006C 0D        1576            db 0x0D
006D 00        1577            db 0x00
006E           1578   __str_6:
006E 25662F72  1579            db '%f/r'
0072 00        1580            db 0x00
0073           1581   
0003           1582            CSEG
0003           1583   
0003           1584   end
